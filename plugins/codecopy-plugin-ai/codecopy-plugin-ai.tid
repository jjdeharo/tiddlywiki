title: $:/plugins/common/codecopy
type: application/json
plugin-type: plugin
description: Copiar (icono 📋) y enviar a IA. Copilot solo en citas; no en código. Estilos unificados; margen en citas.
author: common
created: 20250810
modified: 20250810

{
  "tiddlers": {
    "$:/plugins/common/codecopy/startup": {
      "title": "$:/plugins/common/codecopy/startup",
      "type": "application/javascript",
      "module-type": "startup",
      "text": "/*\\\ntitle: $:/plugins/common/codecopy/startup\ntype: application/javascript\nmodule-type: startup\n\\*/\n(function(){\n\"use strict\";\n\n/** Startup definition **/\nexports.name = \"codecopy-startup\";\nexports.platforms = [\"browser\"];\nexports.after = [\"startup\"];\nexports.synchronous = true;\n\n/** URL templates for AI chatbots **/\n/* Código (pre): sin Copilot */\nvar AI_SERVICES_CODE = [\n  { name: \"ChatGPT\", template: \"https://chatgpt.com/?q=PROMPT\" },\n  { name: \"Grok\", template: \"https://grok.com/?q=PROMPT\" },\n  { name: \"Perplexity\", template: \"https://www.perplexity.ai/?q=PROMPT\" },\n  { name: \"Claude\", template: \"https://claude.ai/new?q=PROMPT\" }\n];\n/* Citas (blockquote): incluye Copilot */\nvar AI_SERVICES_QUOTE = [\n  { name: \"ChatGPT\", template: \"https://chatgpt.com/?q=PROMPT\" },\n  { name: \"Grok\", template: \"https://grok.com/?q=PROMPT\" },\n  { name: \"Microsoft Copilot\", template: \"https://copilot.microsoft.com/?q=PROMPT\" },\n  { name: \"Perplexity\", template: \"https://www.perplexity.ai/?q=PROMPT\" },\n  { name: \"Claude\", template: \"https://claude.ai/new?q=PROMPT\" }\n];\n\n/** Helpers **/\nfunction getCleanText(hostEl){\n  // Clone to remove toolbar and read only the original content\n  var clone = hostEl.cloneNode(true);\n  var tb = clone.querySelector(\".tw-cc-toolbar\");\n  if(tb) tb.remove();\n  return (clone.innerText || \"\").trim();\n}\n\nfunction fallbackCopyToClipboard(text){\n  var ta = document.createElement(\"textarea\");\n  ta.value = text;\n  ta.setAttribute(\"readonly\",\"\");\n  ta.style.position = \"absolute\";\n  ta.style.left = \"-9999px\";\n  document.body.appendChild(ta);\n  ta.select();\n  try { document.execCommand(\"copy\"); } catch(err){ /* ignore */ }\n  document.body.removeChild(ta);\n}\n\nfunction toast(msg, hostEl){\n  var t = document.createElement(\"span\");\n  t.className = \"tw-cc-toast\";\n  t.setAttribute(\"role\",\"status\");\n  t.setAttribute(\"aria-live\",\"polite\");\n  t.textContent = msg;\n  hostEl.appendChild(t);\n  setTimeout(function(){\n    if(t && t.parentNode){ t.parentNode.removeChild(t); }\n  },1200);\n}\n\nfunction openInService(service, prompt){\n  var url = service.template.replace(\"PROMPT\", encodeURIComponent(prompt));\n  try {\n    window.open(url, \"_blank\", \"noopener\");\n  } catch (e) {\n    // ignore\n  }\n}\n\nfunction buildToolbar(hostEl){\n  if(hostEl.classList.contains(\"tw-codecopy-init\")) return;\n  hostEl.classList.add(\"tw-codecopy-init\");\n\n  // Ensure host has positioning context\n  var isQuote = hostEl.tagName.toLowerCase() === \"blockquote\";\n  if(isQuote){\n    hostEl.classList.add(\"tw-codecopy-quote\");\n  } else {\n    hostEl.classList.add(\"tw-codecopy-pre\");\n  }\n\n  var toolbar = document.createElement(\"div\");\n  toolbar.className = \"tw-cc-toolbar\";\n\n  // Copy button (solo icono, con title y aria-label)\n  var btn = document.createElement(\"button\");\n  btn.type = \"button\";\n  btn.className = \"tw-cc-btn\";\n  btn.title = \"Copiar\";\n  btn.setAttribute(\"aria-label\",\"Copiar\");\n  btn.textContent = \"📋\";\n  btn.addEventListener(\"click\", function(ev){\n    ev.preventDefault();\n    ev.stopPropagation();\n    var text = getCleanText(hostEl);\n    if(navigator.clipboard && navigator.clipboard.writeText){\n      navigator.clipboard.writeText(text).then(function(){\n        toast(\"Copiado\", hostEl);\n      }).catch(function(){\n        fallbackCopyToClipboard(text);\n        toast(\"Copiado\", hostEl);\n      });\n    } else {\n      fallbackCopyToClipboard(text);\n      toast(\"Copiado\", hostEl);\n    }\n  });\n  toolbar.appendChild(btn);\n\n  // AI select (services depend on block type)\n  var services = isQuote ? AI_SERVICES_QUOTE : AI_SERVICES_CODE;\n\n  var sel = document.createElement(\"select\");\n  sel.className = \"tw-cc-select\";\n  sel.setAttribute(\"aria-label\",\"Enviar a…\");\n  var placeholder = document.createElement(\"option\");\n  placeholder.value = \"\";\n  placeholder.textContent = \"Enviar a…\";\n  placeholder.selected = true;\n  sel.appendChild(placeholder);\n  services.forEach(function(svc, idx){\n    var opt = document.createElement(\"option\");\n    opt.value = String(idx);\n    opt.textContent = svc.name;\n    sel.appendChild(opt);\n  });\n  sel.addEventListener(\"change\", function(){\n    var idx = parseInt(sel.value, 10);\n    if(isNaN(idx)) return;\n    var prompt = getCleanText(hostEl);\n    openInService(services[idx], prompt);\n    sel.value = \"\";\n  });\n  toolbar.appendChild(sel);\n\n  // Insert toolbar as first child\n  hostEl.insertBefore(toolbar, hostEl.firstChild);\n}\n\nfunction eligible(node){\n  if(!node || node.nodeType !== 1) return false;\n  var tag = node.tagName.toLowerCase();\n  return (tag === \"pre\" || tag === \"blockquote\");\n}\n\nfunction scan(root){\n  var nodes = root.querySelectorAll(\"pre, blockquote\");\n  for(var i=0; i<nodes.length; i++){\n    buildToolbar(nodes[i]);\n  }\n}\n\nexports.startup = function(){\n  // Initial scan\n  scan(document);\n\n  // Observe future changes\n  var mo = new MutationObserver(function(mutations){\n    for(var m of mutations){\n      if(m.type === \"childList\"){\n        for(var n of m.addedNodes){\n          if(n.nodeType !== 1) continue;\n          if(eligible(n)) buildToolbar(n);\n          scan(n);\n        }\n      }\n    }\n  });\n  mo.observe(document.body, {childList:true, subtree:true});\n};\n\n})();"
    },
    "$:/plugins/common/codecopy/styles": {
      "title": "$:/plugins/common/codecopy/styles",
      "type": "text/css",
      "tags": "$:/tags/Stylesheet",
      "text": "/* host */\n.tw-codecopy-pre,\n.tw-codecopy-quote { position: relative; }\n\n/* espacio en citas para que la barra no tape el texto */\n.tw-codecopy-quote { padding-top: 2.25rem; }\n\n/* toolbar */\n.tw-cc-toolbar {\n  position: absolute;\n  top: 0.35rem;\n  right: 0.35rem;\n  display: inline-flex;\n  gap: 0.4rem;\n  align-items: center;\n  z-index: 2;\n}\n\n/* tokens visuales */\n:root {\n  --cc-radius: .375rem;\n  --cc-pad-y: .28rem;\n  --cc-pad-x: .6rem;\n  --cc-line: 1.25;\n  --cc-border: #b8b8b8;\n  --cc-bg: rgba(255,255,255,.9);\n  --cc-text: inherit;\n  --cc-shadow: 0 1px 2px rgba(0,0,0,.06);\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --cc-border:#555;\n    --cc-bg: rgba(20,20,20,.9);\n    --cc-text: #eee;\n  }\n}\n\n/* botón y select con misma tipografía y altura */\n.tw-cc-btn, .tw-cc-select {\n  font: inherit;\n  line-height: var(--cc-line);\n  color: var(--cc-text);\n  background: var(--cc-bg);\n  border: 1px solid var(--cc-border);\n  border-radius: var(--cc-radius);\n  padding: var(--cc-pad-y) var(--cc-pad-x);\n  box-shadow: var(--cc-shadow);\n  vertical-align: middle;\n  height: calc(1em * var(--cc-line) + var(--cc-pad-y) * 2 + 2px);\n}\n\n/* botón: icon-only */\n.tw-cc-btn { \n  cursor: pointer; \n  width: 2.2rem;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n}\n\n/* toast */\n.tw-cc-toast {\n  position: absolute;\n  top: 2.1rem;\n  right: 0.35rem;\n  padding: 0.2rem 0.6rem;\n  font-size: .9em;\n  background: rgba(255, 249, 196, .98);\n  border: 1px solid rgba(0,0,0,.08);\n  border-radius: var(--cc-radius);\n  pointer-events: none;\n  z-index: 10000;\n  box-shadow: 0 2px 8px rgba(0,0,0,.12);\n}"
    }
  }
}